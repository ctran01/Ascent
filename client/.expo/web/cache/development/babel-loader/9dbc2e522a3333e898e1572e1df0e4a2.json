{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Chris\\\\Desktop\\\\App_Academy\\\\Ascent-mobile\\\\client\\\\app\\\\screens\\\\SigninScreen.js\";\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Text, Input, Button as SignInButton } from 'react-native-elements';\nimport { Context as UserContext } from \"../context/UserContext\";\nimport Spacer from \"../components/Spacer\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { NavigationEvents } from 'react-navigation';\nimport AboutUs from \"../components/AboutUs\";\n\nvar SigninScreen = function SigninScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isModalVisable = _useState6[0],\n      setModalVisable = _useState6[1];\n\n  var _useContext = useContext(UserContext),\n      state = _useContext.state,\n      signin = _useContext.signin,\n      clearErrorMessage = _useContext.clearErrorMessage;\n\n  var toggleModal = function toggleModal() {\n    setModalVisable(!isModalVisable);\n  };\n\n  return React.createElement(ImageBackground, {\n    style: styles.background,\n    source: require(\"../images/background2.jpg\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: require(\"../images/logo3.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      backgroundColor: \"rgba(132, 153, 186,0.2)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    h3: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Sign In\")), React.createElement(Input, {\n    placeholder: \"  Email\",\n    placeholderTextColor: \"black\",\n    value: email,\n    onChangeText: setEmail,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    inputContainerStyle: {\n      borderColor: \"black\"\n    },\n    leftIcon: React.createElement(MaterialIcons, {\n      name: \"email\",\n      size: 24,\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    placeholder: \"  Password\",\n    placeholderTextColor: \"black\",\n    value: password,\n    onChangeText: setPassword,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    secureTextEntry: true,\n    inputContainerStyle: {\n      borderColor: \"black\"\n    },\n    leftIcon: React.createElement(FontAwesome, {\n      name: \"lock\",\n      size: 24,\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), state.errorMessage ? React.createElement(Text, {\n    style: styles.errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 31\n    }\n  }, state.errorMessage) : null, React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, React.createElement(SignInButton, {\n    buttonStyle: {\n      backgroundColor: \"#1359c4\"\n    },\n    title: \"Sign In\",\n    onPress: function onPress() {\n      return signin({\n        email: email,\n        password: password\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), React.createElement(NavigationEvents, {\n    onWillBlur: clearErrorMessage,\n    onWillFocus: clearErrorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Signup');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.signInText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Don't have an account? Register here\"))), React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })), React.createElement(SignInButton, {\n    buttonStyle: {\n      backgroundColor: \"transparent\"\n    },\n    style: styles.modal,\n    titleStyle: {\n      color: \"white\"\n    },\n    title: \"About Us\",\n    onPress: toggleModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), React.createElement(AboutUs, {\n    toggleModal: toggleModal,\n    isModalVisable: isModalVisable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  })));\n};\n\nSigninScreen.navigationOptions = function () {\n  return {\n    header: function header() {\n      return false;\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1\n  },\n  image: {\n    width: 400,\n    height: 130,\n    marginLeft: 20,\n    marginTop: 20\n  },\n  errorMessage: {\n    color: \"red\",\n    fontSize: 16,\n    marginLeft: 15\n  },\n  signInText: {\n    color: \"blue\"\n  },\n  modal: {\n    width: 100,\n    height: 40,\n    marginLeft: 160,\n    marginTop: 30\n  }\n});\nexport default SigninScreen;","map":{"version":3,"sources":["C:/Users/Chris/Desktop/App_Academy/Ascent-mobile/client/app/screens/SigninScreen.js"],"names":["React","useState","useContext","Text","Input","Button","SignInButton","Context","UserContext","Spacer","MaterialIcons","FontAwesome","NavigationEvents","AboutUs","SigninScreen","navigation","email","setEmail","password","setPassword","isModalVisable","setModalVisable","state","signin","clearErrorMessage","toggleModal","styles","background","require","image","backgroundColor","borderColor","errorMessage","navigate","signInText","modal","color","navigationOptions","header","StyleSheet","create","flex","width","height","marginLeft","marginTop","fontSize"],"mappings":"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","sourcesContent":["import React,{useState, useContext} from 'react';\r\nimport {View, StyleSheet, SafeAreaView,ImageBackground,Image,TouchableOpacity, Button} from 'react-native';\r\nimport {Text, Input, Button as SignInButton} from 'react-native-elements'\r\nimport {Context as UserContext} from '../context/UserContext';\r\nimport Spacer from '../components/Spacer'\r\nimport { MaterialIcons } from '@expo/vector-icons'; \r\nimport { FontAwesome } from '@expo/vector-icons'; \r\nimport {NavigationEvents} from 'react-navigation'\r\nimport AboutUs from '../components/AboutUs';\r\n\r\n//Button color hex 1359c4\r\nconst SigninScreen = ({navigation}) => {\r\n  const[email,setEmail] = useState('')\r\n  const[password,setPassword] = useState('')\r\n\r\n  //replace with context later\r\n  const[isModalVisable,setModalVisable] = useState(false)\r\n\r\n\r\n  const { state, signin, clearErrorMessage} = useContext(UserContext)\r\n\r\n  const toggleModal = () =>{\r\n    setModalVisable(!isModalVisable)\r\n  }\r\n\r\n  return (\r\n    <ImageBackground style={styles.background} source={require(\"../images/background2.jpg\")}>\r\n    <SafeAreaView>\r\n      <Image style={styles.image} source={require('../images/logo3.png')}></Image>\r\n      <View style={{ backgroundColor:\"rgba(132, 153, 186,0.2)\"}}>\r\n\r\n          <Spacer>\r\n            \r\n            <Text h3>Sign In</Text>\r\n          </Spacer>\r\n          <Input\r\n            placeholder={\"  Email\"}\r\n            placeholderTextColor=\"black\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n            autoCapitalize=\"none\"\r\n            autoCorrect={false}\r\n            inputContainerStyle={{ borderColor: \"black\" ,}}\r\n            leftIcon={<MaterialIcons name=\"email\" size={24} color=\"black\" />} />\r\n          <Spacer />\r\n          <Input placeholder={\"  Password\"}\r\n            placeholderTextColor=\"black\"\r\n            value={password}\r\n            onChangeText={setPassword}\r\n            autoCapitalize=\"none\"\r\n            autoCorrect={false}\r\n            secureTextEntry={true}\r\n            inputContainerStyle={{ borderColor: \"black\" }}\r\n            leftIcon={<FontAwesome name=\"lock\" size={24} color=\"black\" />}\r\n          // passwordRules\r\n          />\r\n        {state.errorMessage ? <Text style={styles.errorMessage}>{state.errorMessage}</Text>: null}\r\n          <Spacer>\r\n          <SignInButton buttonStyle={{backgroundColor:\"#1359c4\"}}title={\"Sign In\"} onPress={()=> signin({email,password})} />\r\n          </Spacer>\r\n        <NavigationEvents \r\n          //  onWillFocus={()=>{}} Right before navigating to screen\r\n          //  onDidFocus ={()=>{}} Right when you navigate to screen\r\n          onWillBlur={clearErrorMessage} //Right when you leave a screen\r\n          onWillFocus={clearErrorMessage}\r\n        />\r\n        <TouchableOpacity onPress={() => navigation.navigate('Signup')}>\r\n          <Spacer>\r\n            <Text style={styles.signInText}>Don't have an account? Register here</Text>\r\n          </Spacer>\r\n        </TouchableOpacity>\r\n        <Spacer/>\r\n      </View>\r\n      <SignInButton buttonStyle={{backgroundColor:\"transparent\"}}style={styles.modal} titleStyle={{color:\"white\"}}title=\"About Us\" onPress={toggleModal}/>\r\n      <AboutUs toggleModal={toggleModal} isModalVisable={isModalVisable}/>\r\n    </SafeAreaView>\r\n    </ImageBackground>\r\n  );\r\n}\r\n\r\nSigninScreen.navigationOptions = () => {\r\n  return {\r\n    header: () => false,\r\n  };\r\n};\r\n\r\nconst styles=StyleSheet.create({\r\n  background:{\r\n    flex: 1\r\n  },\r\n  image:{\r\n    width:400,\r\n    height:130,\r\n    marginLeft:20,\r\n    marginTop: 20\r\n  },\r\n  errorMessage:{\r\n    color: \"red\",\r\n    fontSize: 16,\r\n    marginLeft: 15\r\n  },\r\n  signInText:{\r\n    color: \"blue\"\r\n  },\r\n  modal:{\r\n    width:100,\r\n    height: 40,\r\n    marginLeft:160,\r\n    marginTop:30,\r\n    \r\n  }\r\n\r\n})\r\nexport default SigninScreen;"]},"metadata":{},"sourceType":"module"}