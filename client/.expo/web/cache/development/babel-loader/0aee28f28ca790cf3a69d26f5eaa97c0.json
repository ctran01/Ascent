{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chris\\\\Desktop\\\\App_Academy\\\\Ascent-mobile\\\\client\\\\app\\\\screens\\\\crudArea\\\\EditAreaScreen.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport AreaForm from \"../../components/AreaForm\";\nimport { Context as AreaContext } from \"../../context/AreaContext\";\nimport { createIconSetFromFontello } from \"@expo/vector-icons\";\nimport apiServer from \"../../api/apiServer\";\n\nvar EditAreaScreen = function EditAreaScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AreaContext),\n      state = _useContext.state,\n      editArea = _useContext.editArea;\n\n  var id = navigation.getParam(\"id\");\n  var area = state.find(function (area) {\n    return area.id === id;\n  });\n  return React.createElement(ImageBackground, {\n    style: {\n      flex: 1\n    },\n    source: require(\"../../images/blue-light.jpg\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(AreaForm, {\n    initialValues: {\n      name: area.name,\n      description: area.description\n    },\n    submitButtonText: \"Confirm Changes\",\n    onSubmit: function onSubmit(name, description) {\n      editArea(id, name, description, function () {\n        return navigation.navigate(\"Home\");\n      }, function () {\n        alert(\"Area saved!\");\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  })));\n};\n\nEditAreaScreen.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  var title = navigation.getParam('title');\n  return {\n    title: \"Edit Area\",\n    headerTitleStyle: {\n      color: 'white'\n    },\n    headerBackTitleVisible: false,\n    headerStyle: {\n      backgroundColor: 'black'\n    }\n  };\n};\n\nexport default EditAreaScreen;","map":{"version":3,"sources":["C:/Users/Chris/Desktop/App_Academy/Ascent-mobile/client/app/screens/crudArea/EditAreaScreen.js"],"names":["React","useContext","useState","useEffect","AreaForm","Context","AreaContext","createIconSetFromFontello","apiServer","EditAreaScreen","navigation","state","editArea","id","getParam","area","find","flex","require","name","description","navigate","alert","navigationOptions","title","headerTitleStyle","color","headerBackTitleVisible","headerStyle","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;;;;;AAEA,OAAOC,QAAP;AACA,SAAQC,OAAO,IAAIC,WAAnB;AACA,SAASC,yBAAT;AACA,OAAOC,SAAP;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAAA,oBAGZT,UAAU,CAACK,WAAD,CAHE;AAAA,MAG/BK,KAH+B,eAG/BA,KAH+B;AAAA,MAGxBC,QAHwB,eAGxBA,QAHwB;;AAIvC,MAAMC,EAAE,GAAGH,UAAU,CAACI,QAAX,CAAoB,IAApB,CAAX;AAEA,MAAMC,IAAI,GAAGJ,KAAK,CAACK,IAAN,CAAW,UAACD,IAAD;AAAA,WAASA,IAAI,CAACF,EAAL,KAAYA,EAArB;AAAA,GAAX,CAAb;AAqBA,SACE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAE;AAACI,MAAAA,IAAI,EAAC;AAAN,KAAxB;AAAiC,IAAA,MAAM,EAAEC,OAAO,+BAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,QAAD;AACA,IAAA,aAAa,EAAE;AAACC,MAAAA,IAAI,EAAEJ,IAAI,CAACI,IAAZ;AAAkBC,MAAAA,WAAW,EAAEL,IAAI,CAACK;AAApC,KADf;AAEA,IAAA,gBAAgB,EAAE,iBAFlB;AAGA,IAAA,QAAQ,EAAE,kBAACD,IAAD,EAAMC,WAAN,EAAqB;AAC7BR,MAAAA,QAAQ,CAACC,EAAD,EAAIM,IAAJ,EAASC,WAAT,EAAsB;AAAA,eAAKV,UAAU,CAACW,QAAX,CAAoB,MAApB,CAAL;AAAA,OAAtB,EAAwD,YAAI;AAACC,QAAAA,KAAK,CAAC,aAAD,CAAL;AAAqB,OAAlF,CAAR;AAA4F,KAJ9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFA,CADF;AAcD,CAzCD;;AA0CAb,cAAc,CAACc,iBAAf,GAAmC,iBAAkB;AAAA,MAAhBb,UAAgB,SAAhBA,UAAgB;AACnD,MAAMc,KAAK,GAAGd,UAAU,CAACI,QAAX,CAAoB,OAApB,CAAd;AACA,SAAO;AACLU,IAAAA,KAAK,EAAE,WADF;AAELC,IAAAA,gBAAgB,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAFb;AAGLC,IAAAA,sBAAsB,EAAE,KAHnB;AAILC,IAAAA,WAAW,EAAE;AAACC,MAAAA,eAAe,EAAE;AAAlB;AAJR,GAAP;AAMD,CARD;;AAUA,eAAepB,cAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport {Text, View, StyleSheet, ImageBackground} from 'react-native'\r\nimport AreaForm from '../../components/AreaForm'\r\nimport {Context as AreaContext} from \"../../context/AreaContext\"\r\nimport { createIconSetFromFontello } from 'react-native-vector-icons';\r\nimport apiServer from '../../api/apiServer'\r\nconst EditAreaScreen = ({navigation}) => {\r\n  \r\n  \r\n  const { state, editArea} = useContext(AreaContext)\r\n  const id = navigation.getParam(\"id\");\r\n  // const [area,setArea] = useState({})\r\n  const area = state.find((area)=> area.id === id);\r\n\r\n\r\n  // const  getArea = async(id)=>{\r\n  //   const res = await apiServer.get(`/area/${id}`)\r\n  //   try{\r\n  //     setArea(res.data.area)\r\n\r\n  //   }catch(err){\r\n  //     console.log(err)\r\n  //   }\r\n  // }\r\n\r\n\r\n  // useEffect(()=>{\r\n  //   getArea(id)\r\n\r\n  // },[])\r\n  // console.log(area, \"edit Area state\")\r\n\r\n\r\n  return (\r\n    <ImageBackground style={{flex:1}}source={require('../../images/blue-light.jpg')}>\r\n\r\n    <View>\r\n\r\n      <AreaForm\r\n      initialValues={{name: area.name, description: area.description}}\r\n      submitButtonText={\"Confirm Changes\"}\r\n      onSubmit={(name,description)=> {\r\n        editArea(id,name,description, ()=> navigation.navigate(\"Home\"), ()=>{alert(\"Area saved!\")})}}\r\n      />\r\n    </View>\r\n    </ImageBackground>\r\n  );\r\n}\r\nEditAreaScreen.navigationOptions = ({navigation}) => {\r\n  const title = navigation.getParam('title')\r\n  return {\r\n    title: \"Edit Area\" ,\r\n    headerTitleStyle: {color: 'white'},\r\n    headerBackTitleVisible: false,\r\n    headerStyle: {backgroundColor: 'black'}\r\n  };\r\n};\r\n\r\nexport default EditAreaScreen;"]},"metadata":{},"sourceType":"module"}