{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Chris\\\\Desktop\\\\App_Academy\\\\Ascent-mobile\\\\client\\\\app\\\\screens\\\\SearchScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SearchBar from \"../components/SearchBar\";\nimport apiServer from \"../api/apiServer\";\n\nvar SearchScreen = function SearchScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      areas = _useState4[0],\n      setAreas = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      routes = _useState6[0],\n      setRoutes = _useState6[1];\n\n  var getAreas = function getAreas() {\n    var res;\n    return _regeneratorRuntime.async(function getAreas$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(apiServer.get('/area/'));\n\n          case 3:\n            res = _context.sent;\n            setAreas(res.data.areas);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    getAreas();\n  }, []);\n  console.log(areas);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(SearchBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default SearchScreen;","map":{"version":3,"sources":["C:/Users/Chris/Desktop/App_Academy/Ascent-mobile/client/app/screens/SearchScreen.js"],"names":["React","useState","useEffect","SearchBar","apiServer","SearchScreen","searchTerm","setSearchTerm","areas","setAreas","routes","setRoutes","getAreas","get","res","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;AAEA,OAAOC,SAAP;AACA,OAAOC,SAAP;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,kBACcJ,QAAQ,CAAC,EAAD,CADtB;AAAA;AAAA,MAChBK,UADgB;AAAA,MACHC,aADG;;AAAA,mBAEGN,QAAQ,CAAC,EAAD,CAFX;AAAA;AAAA,MAEhBO,KAFgB;AAAA,MAETC,QAFS;;AAAA,mBAGIR,QAAQ,CAAC,EAAD,CAHZ;AAAA;AAAA,MAGhBS,MAHgB;AAAA,MAGTC,SAHS;;AAKvB,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEOR,SAAS,CAACS,GAAV,CAAc,QAAd,CAFP;;AAAA;AAELC,YAAAA,GAFK;AAGTL,YAAAA,QAAQ,CAACK,GAAG,CAACC,IAAJ,CAASP,KAAV,CAAR;AAHS;AAAA;;AAAA;AAAA;AAAA;AAKTQ,YAAAA,OAAO,CAACC,GAAR;;AALS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AASAf,EAAAA,SAAS,CAAC,YAAI;AACVU,IAAAA,QAAQ;AACX,GAFQ,EAEP,EAFO,CAAT;AAIAI,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAMH,CAzBD;;AA2BA,eAAeH,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {View, Text, StyleSheet, ScrollView} from 'react-native';\r\nimport SearchBar from '../components/SearchBar';\r\nimport apiServer from '../api/apiServer'\r\n\r\n\r\nconst SearchScreen = () => {\r\n    const [searchTerm,  setSearchTerm] = useState('')\r\n    const [areas, setAreas] = useState([])\r\n    const [routes,setRoutes] = useState([])\r\n\r\n    const getAreas = async ()=>{\r\n        try{\r\n            let res = await apiServer.get('/area/')\r\n            setAreas(res.data.areas)\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getAreas()\r\n    },[])\r\n\r\n    console.log(areas)\r\n    return (\r\n        <View>\r\n            <SearchBar></SearchBar>\r\n            \r\n        </View>    \r\n    );\r\n}\r\n\r\nexport default SearchScreen;"]},"metadata":{},"sourceType":"module"}