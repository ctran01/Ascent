{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Chris\\\\Desktop\\\\App_Academy\\\\Ascent-mobile\\\\client\\\\app\\\\screens\\\\YourRouteScreen.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Text } from 'react-native-elements';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport Spacer from \"../components/Spacer\";\nimport apiServer from \"../api/apiServer\";\nimport AreaList from \"../components/AreaList\";\nimport RouteList from \"../components/RouteList\";\nimport { Context as AreaContext } from \"../context/AreaContext\";\nimport { Context as RouteContext } from \"../context/RouteContext\";\n\nvar YourRouteScreen = function YourRouteScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      areas = _useState2[0],\n      setAreas = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      routes = _useState4[0],\n      setRoutes = _useState4[1];\n\n  var _useContext = useContext(AreaContext),\n      getUserAreas = _useContext.getUserAreas,\n      areaState = _useContext.state;\n\n  var _useContext2 = useContext(RouteContext),\n      getUserRoutes = _useContext2.getUserRoutes,\n      routeState = _useContext2.state;\n\n  useEffect(function () {\n    getUserAreas();\n    getUserRoutes();\n    var listener = navigation.addListener(\"didFocus\", function () {\n      getUserAreas();\n      getUserRoutes();\n    });\n    return function () {\n      listener.remove();\n    };\n  }, []);\n  return React.createElement(ImageBackground, {\n    style: {\n      flex: 1\n    },\n    source: require(\"../images/blue-light.jpg\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    h4: true,\n    style: {\n      marginLeft: 15,\n      color: \"white\",\n      marginTop: 15,\n      marginBottom: 15,\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Your Created Areas\"), React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(AreaList, {\n    items: areaState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    h4: true,\n    style: {\n      marginLeft: 15,\n      marginBottom: 15,\n      color: \"white\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Your Created Routes\"), React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(RouteList, {\n    items: routeState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({});\n\nYourRouteScreen.navigationOptions = function () {\n  return {\n    header: function header() {\n      return false;\n    }\n  };\n};\n\nexport default YourRouteScreen;","map":{"version":3,"sources":["C:/Users/Chris/Desktop/App_Academy/Ascent-mobile/client/app/screens/YourRouteScreen.js"],"names":["React","useEffect","useState","useContext","Text","ScrollView","Spacer","apiServer","AreaList","RouteList","Context","AreaContext","RouteContext","YourRouteScreen","navigation","areas","setAreas","routes","setRoutes","getUserAreas","areaState","state","getUserRoutes","routeState","listener","addListener","remove","flex","require","marginLeft","color","marginTop","marginBottom","fontWeight","styles","StyleSheet","create","navigationOptions","header"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport {View, StyleSheet, SafeAreaView, AsyncStorage,ImageBackground} from 'react-native';\r\nimport{ Text} from 'react-native-elements';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport Spacer from '../components/Spacer';\r\nimport apiServer from '../api/apiServer'\r\nimport AreaList from '../components/AreaList';\r\nimport RouteList from '../components/RouteList';\r\nimport {Context as AreaContext} from '../context/AreaContext'\r\nimport {Context as RouteContext} from '../context/RouteContext'\r\n\r\n\r\nconst YourRouteScreen = ({navigation}) => {\r\n  const [areas, setAreas] = useState([])\r\n  const [routes,setRoutes] = useState([])\r\n  \r\n  const {getUserAreas, state: areaState} = useContext(AreaContext)\r\n  const {getUserRoutes, state: routeState} = useContext(RouteContext)\r\n  // const getAreas = async()=>{\r\n  //   const id = await AsyncStorage.getItem('userid')\r\n    \r\n  //   try{\r\n  //     const res = await apiServer.get(`/area/user/${id}`)\r\n  //     setAreas(res.data.areas)\r\n  //   }catch(err){\r\n  //     console.log(err)\r\n  //   }\r\n  // }\r\n\r\n  // const getRoutes = async()=>{\r\n  //   const id = await AsyncStorage.getItem('userid')\r\n  //   try{\r\n  //     const res = await apiServer.get(`/route/user/${id}`)\r\n  //     setRoutes(res.data.routes)\r\n\r\n  //   }catch(err){\r\n  //     console.log(err)\r\n  //   }\r\n  // }\r\n\r\n  useEffect(()=>{\r\n    getUserAreas();\r\n    getUserRoutes();\r\n    const listener = navigation.addListener(\"didFocus\", () => {\r\n      getUserAreas();\r\n      getUserRoutes();\r\n    });\r\n\r\n    return () => {\r\n      listener.remove();\r\n    };\r\n    \r\n  },[])\r\n\r\n  // console.log(areaState, \"Area Context State\")\r\n  return (\r\n    <ImageBackground style={{flex:1}}source={require('../images/blue-light.jpg')}>\r\n      <SafeAreaView>\r\n        <Text h4 style={{marginLeft:15, color: \"white\", marginTop:15,marginBottom:15, fontWeight:\"bold\"}}>Your Created Areas</Text>\r\n        <ScrollView>\r\n          <AreaList items={areaState}></AreaList>\r\n        </ScrollView>\r\n        <Spacer/>\r\n        <Text h4 style={{marginLeft:15,marginBottom:15,color:\"white\", fontWeight:\"bold\"}}>Your Created Routes</Text>\r\n        <ScrollView>\r\n          <RouteList items={routeState}></RouteList>\r\n        </ScrollView>\r\n      </SafeAreaView>\r\n      </ImageBackground>\r\n\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({}\r\n  )\r\n\r\nYourRouteScreen.navigationOptions = () => {\r\n  return {\r\n    header: () => false,\r\n  };\r\n};\r\n\r\nexport default YourRouteScreen;"]},"metadata":{},"sourceType":"module"}