{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Chris\\\\Desktop\\\\App_Academy\\\\Ascent-mobile\\\\client\\\\app\\\\screens\\\\SignupScreen.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Text, Input, Button } from 'react-native-elements';\nimport { NavigationEvents } from 'react-navigation';\nimport Spacer from \"../components/Spacer\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { Context as UserContext } from \"../context/UserContext\";\nimport ReferralContainer from \"../components/ReferralContainer\";\nimport AboutUs from \"../components/AboutUs\";\n\nvar SignupScreen = function SignupScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      state = _useContext.state,\n      signup = _useContext.signup,\n      clearErrorMessage = _useContext.clearErrorMessage,\n      tryLocalSignin = _useContext.tryLocalSignin;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isModalVisable = _useState8[0],\n      setModalVisable = _useState8[1];\n\n  var toggleModal = function toggleModal() {\n    setModalVisable(!isModalVisable);\n  };\n\n  return React.createElement(ImageBackground, {\n    style: styles.background,\n    source: require(\"../images/background2.jpg\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: require(\"../images/logo3.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      backgroundColor: \"rgba(132, 153, 186,0.2)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    h3: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Sign Up for Ascent\")), React.createElement(Input, {\n    placeholder: \"  Username\",\n    placeholderTextColor: \"black\",\n    value: username,\n    onChangeText: setUsername,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    inputContainerStyle: {\n      borderColor: \"black\"\n    },\n    leftIcon: React.createElement(MaterialIcons, {\n      name: \"person-outline\",\n      size: 24,\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    placeholder: \"  Email\",\n    placeholderTextColor: \"black\",\n    value: email,\n    onChangeText: setEmail,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    inputContainerStyle: {\n      borderColor: \"black\"\n    },\n    leftIcon: React.createElement(MaterialIcons, {\n      name: \"email\",\n      size: 24,\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    placeholder: \"  Password\",\n    placeholderTextColor: \"black\",\n    value: password,\n    onChangeText: setPassword,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    secureTextEntry: true,\n    inputContainerStyle: {\n      borderColor: \"black\"\n    },\n    leftIcon: React.createElement(FontAwesome, {\n      name: \"lock\",\n      size: 24,\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), state.errorMessage ? React.createElement(Text, {\n    style: styles.errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 28\n    }\n  }, state.errorMessage) : null, React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Create Account\",\n    buttonStyle: {\n      backgroundColor: \"#1359c4\"\n    },\n    onPress: function onPress() {\n      return signup({\n        username: username,\n        email: email,\n        password: password\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 8\n    }\n  })), React.createElement(NavigationEvents, {\n    onWillBlur: clearErrorMessage,\n    onWillFocus: clearErrorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Signin');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.signInText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Already have an account? Sign in here\"))), React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  })), React.createElement(Button, {\n    buttonStyle: {\n      backgroundColor: \"transparent\"\n    },\n    style: styles.modal,\n    titleStyle: {\n      color: \"white\"\n    },\n    title: \"About Us\",\n    onPress: toggleModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), React.createElement(AboutUs, {\n    toggleModal: toggleModal,\n    isModalVisable: isModalVisable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  })));\n};\n\nSignupScreen.navigationOptions = function () {\n  return {\n    header: function header() {\n      return false;\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1\n  },\n  image: {\n    width: 400,\n    height: 130,\n    marginLeft: 20,\n    marginTop: 20\n  },\n  errorMessage: {\n    color: \"red\",\n    fontSize: 16,\n    marginLeft: 15\n  },\n  signInText: {\n    color: \"blue\"\n  },\n  modal: {\n    width: 100,\n    height: 40,\n    marginLeft: 160,\n    marginTop: 30\n  }\n});\nexport default SignupScreen;","map":{"version":3,"sources":["C:/Users/Chris/Desktop/App_Academy/Ascent-mobile/client/app/screens/SignupScreen.js"],"names":["React","useState","useContext","useEffect","Text","Input","Button","NavigationEvents","Spacer","MaterialIcons","FontAwesome","Context","UserContext","ReferralContainer","AboutUs","SignupScreen","navigation","state","signup","clearErrorMessage","tryLocalSignin","username","setUsername","email","setEmail","password","setPassword","isModalVisable","setModalVisable","toggleModal","styles","background","require","image","backgroundColor","borderColor","errorMessage","navigate","signInText","modal","color","navigationOptions","header","StyleSheet","create","flex","width","height","marginLeft","marginTop","fontSize"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD;;;;;;;AAEA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,uBAAlC;AACA,SAAQC,gBAAR,QAA+B,kBAA/B;AACA,OAAOC,MAAP;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAAQC,OAAO,IAAIC,WAAnB;AACA,OAAOC,iBAAP;AACA,OAAOC,OAAP;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAAA,oBACqBd,UAAU,CAACU,WAAD,CAD/B;AAAA,MAC9BK,KAD8B,eAC9BA,KAD8B;AAAA,MACxBC,MADwB,eACxBA,MADwB;AAAA,MAChBC,iBADgB,eAChBA,iBADgB;AAAA,MACGC,cADH,eACGA,cADH;;AAAA,kBAEPnB,QAAQ,CAAC,EAAD,CAFD;AAAA;AAAA,MAE/BoB,QAF+B;AAAA,MAEtBC,WAFsB;;AAAA,mBAGbrB,QAAQ,CAAC,EAAD,CAHK;AAAA;AAAA,MAG/BsB,KAH+B;AAAA,MAGzBC,QAHyB;;AAAA,mBAIPvB,QAAQ,CAAC,EAAD,CAJD;AAAA;AAAA,MAI/BwB,QAJ+B;AAAA,MAItBC,WAJsB;;AAAA,mBAKGzB,QAAQ,CAAC,KAAD,CALX;AAAA;AAAA,MAK/B0B,cAL+B;AAAA,MAKhBC,eALgB;;AAOrC,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAK;AACvBD,IAAAA,eAAe,CAAC,CAACD,cAAF,CAAf;AACD,GAFD;;AAIA,SACE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAEG,MAAM,CAACC,UAA/B;AAA2C,IAAA,MAAM,EAAEC,OAAO,6BAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,MAAM,CAACG,KAArB;AAA4B,IAAA,MAAM,EAAED,OAAO,uBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACE,MAAAA,eAAe,EAAC;AAAjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADA,EAIA,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAE,YAApB;AACE,IAAA,oBAAoB,EAAC,OADvB;AAEE,IAAA,KAAK,EAAEb,QAFT;AAGE,IAAA,YAAY,EAAEC,WAHhB;AAIE,IAAA,cAAc,EAAC,MAJjB;AAKE,IAAA,WAAW,EAAE,KALf;AAME,IAAA,mBAAmB,EAAE;AAAEa,MAAAA,WAAW,EAAE;AAAf,KANvB;AAOE,IAAA,QAAQ,EAAE,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAC,gBAApB;AAAqC,MAAA,IAAI,EAAE,EAA3C;AAA+C,MAAA,KAAK,EAAC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,EAYA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZA,EAaA,oBAAC,KAAD;AACE,IAAA,WAAW,EAAE,SADf;AAEE,IAAA,oBAAoB,EAAC,OAFvB;AAGE,IAAA,KAAK,EAAEZ,KAHT;AAIE,IAAA,YAAY,EAAEC,QAJhB;AAKE,IAAA,cAAc,EAAC,MALjB;AAME,IAAA,WAAW,EAAE,KANf;AAOE,IAAA,mBAAmB,EAAE;AAAEW,MAAAA,WAAW,EAAE;AAAf,KAPvB;AAQE,IAAA,QAAQ,EAAE,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAC,OAApB;AAA4B,MAAA,IAAI,EAAE,EAAlC;AAAsC,MAAA,KAAK,EAAC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbA,EAsBA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBA,EAuBA,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAE,YAApB;AACE,IAAA,oBAAoB,EAAC,OADvB;AAEE,IAAA,KAAK,EAAEV,QAFT;AAGE,IAAA,YAAY,EAAEC,WAHhB;AAIE,IAAA,cAAc,EAAC,MAJjB;AAKE,IAAA,WAAW,EAAE,KALf;AAME,IAAA,eAAe,EAAE,IANnB;AAOE,IAAA,mBAAmB,EAAE;AAAES,MAAAA,WAAW,EAAE;AAAf,KAPvB;AAQE,IAAA,QAAQ,EAAE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,IAAI,EAAE,EAA/B;AAAmC,MAAA,KAAK,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBA,EAkCAlB,KAAK,CAACmB,YAAN,GAAqB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACM,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCnB,KAAK,CAACmB,YAAzC,CAArB,GAAoF,IAlCpF,EAmCA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,gBAAf;AAAiC,IAAA,WAAW,EAAE;AAACF,MAAAA,eAAe,EAAC;AAAjB,KAA9C;AAA2E,IAAA,OAAO,EAAG;AAAA,aAAKhB,MAAM,CAAC;AAACG,QAAAA,QAAQ,EAARA,QAAD;AAAUE,QAAAA,KAAK,EAALA,KAAV;AAAgBE,QAAAA,QAAQ,EAARA;AAAhB,OAAD,CAAX;AAAA,KAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAnCA,EAsCF,oBAAC,gBAAD;AAGE,IAAA,UAAU,EAAEN,iBAHd;AAIE,IAAA,WAAW,EAAEA,iBAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtCE,EA6CF,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMH,UAAU,CAACqB,QAAX,CAAoB,QAApB,CAAN;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACQ,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADF,CADF,CA7CE,EAkDF,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlDE,CAFF,EAuDE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE;AAACJ,MAAAA,eAAe,EAAC;AAAjB,KAArB;AAAqD,IAAA,KAAK,EAAEJ,MAAM,CAACS,KAAnE;AAA0E,IAAA,UAAU,EAAE;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAtF;AAAsG,IAAA,KAAK,EAAC,UAA5G;AAAuH,IAAA,OAAO,EAAEX,WAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvDF,EAwDE,oBAAC,OAAD;AAAS,IAAA,WAAW,EAAEA,WAAtB;AAAmC,IAAA,cAAc,EAAEF,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxDF,CADA,CADF;AA8DD,CAzED;;AA4EAZ,YAAY,CAAC0B,iBAAb,GAAiC,YAAM;AACrC,SAAO;AACLC,IAAAA,MAAM,EAAE;AAAA,aAAM,KAAN;AAAA;AADH,GAAP;AAGD,CAJD;;AAOA,IAAMZ,MAAM,GAACa,UAAU,CAACC,MAAX,CAAkB;AAC7Bb,EAAAA,UAAU,EAAC;AACTc,IAAAA,IAAI,EAAC;AADI,GADkB;AAI7BZ,EAAAA,KAAK,EAAC;AACJa,IAAAA,KAAK,EAAC,GADF;AAEJC,IAAAA,MAAM,EAAC,GAFH;AAGJC,IAAAA,UAAU,EAAC,EAHP;AAIJC,IAAAA,SAAS,EAAE;AAJP,GAJuB;AAU7Bb,EAAAA,YAAY,EAAC;AACXI,IAAAA,KAAK,EAAE,KADI;AAEXU,IAAAA,QAAQ,EAAE,EAFC;AAGXF,IAAAA,UAAU,EAAE;AAHD,GAVgB;AAe7BV,EAAAA,UAAU,EAAC;AACTE,IAAAA,KAAK,EAAE;AADE,GAfkB;AAkB7BD,EAAAA,KAAK,EAAC;AACJO,IAAAA,KAAK,EAAC,GADF;AAEJC,IAAAA,MAAM,EAAE,EAFJ;AAGJC,IAAAA,UAAU,EAAC,GAHP;AAIJC,IAAAA,SAAS,EAAC;AAJN;AAlBuB,CAAlB,CAAb;AA2BA,eAAelC,YAAf","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\r\nimport {View, StyleSheet, ImageBackground, SafeAreaView, TouchableOpacity, Image } from 'react-native';\r\nimport {Text, Input, Button} from 'react-native-elements'\r\nimport {NavigationEvents} from 'react-navigation'\r\nimport Spacer from '../components/Spacer'\r\nimport { MaterialIcons } from '@expo/vector-icons'; \r\nimport { FontAwesome } from '@expo/vector-icons'; \r\nimport {Context as UserContext} from '../context/UserContext'\r\nimport ReferralContainer from '../components/ReferralContainer';\r\nimport AboutUs from '../components/AboutUs';\r\n\r\n\r\nconst SignupScreen = ({navigation}) => {\r\n  const {state,signup, clearErrorMessage, tryLocalSignin} = useContext(UserContext)\r\n  const[username,setUsername] = useState('')\r\n  const[email,setEmail] = useState('')\r\n  const[password,setPassword] = useState('')\r\n  const[isModalVisable,setModalVisable] = useState(false)\r\n\r\n  const toggleModal = () =>{\r\n    setModalVisable(!isModalVisable)\r\n  }\r\n\r\n  return (\r\n    <ImageBackground style={styles.background} source={require(\"../images/background2.jpg\")}>\r\n    <SafeAreaView>\r\n      <Image style={styles.image} source={require('../images/logo3.png')}></Image>\r\n      <View style={{backgroundColor:\"rgba(132, 153, 186,0.2)\"}}>\r\n      <Spacer>\r\n        <Text h3>Sign Up for Ascent</Text>\r\n      </Spacer>\r\n      <Input placeholder={\"  Username\"}\r\n        placeholderTextColor=\"black\"\r\n        value={username}\r\n        onChangeText={setUsername}\r\n        autoCapitalize=\"none\"\r\n        autoCorrect={false}\r\n        inputContainerStyle={{ borderColor: \"black\" }}\r\n        leftIcon={<MaterialIcons name=\"person-outline\" size={24} color=\"black\" />} />\r\n      <Spacer />\r\n      <Input\r\n        placeholder={\"  Email\"}\r\n        placeholderTextColor=\"black\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        autoCapitalize=\"none\"\r\n        autoCorrect={false}\r\n        inputContainerStyle={{ borderColor: \"black\" }}\r\n        leftIcon={<MaterialIcons name=\"email\" size={24} color=\"black\" />} />\r\n      <Spacer />\r\n      <Input placeholder={\"  Password\"}\r\n        placeholderTextColor=\"black\"\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        autoCapitalize=\"none\"\r\n        autoCorrect={false}\r\n        secureTextEntry={true}\r\n        inputContainerStyle={{ borderColor: \"black\" }}\r\n        leftIcon={<FontAwesome name=\"lock\" size={24} color=\"black\" />}\r\n       // passwordRules\r\n       />\r\n     {state.errorMessage ? <Text style={styles.errorMessage}>{state.errorMessage}</Text>: null}\r\n      <Spacer>\r\n       <Button title={\"Create Account\"} buttonStyle={{backgroundColor:\"#1359c4\"}} onPress={ ()=> signup({username,email,password})} />\r\n      </Spacer>\r\n    <NavigationEvents \r\n      //  onWillFocus={()=>{}} Right before navigating to screen\r\n      //  onDidFocus ={()=>{}} Right when you navigate to screen\r\n      onWillBlur={clearErrorMessage} //Right when you leave a screen\r\n      onWillFocus={clearErrorMessage}\r\n    />\r\n    \r\n    <TouchableOpacity onPress={() => navigation.navigate('Signin')}>\r\n      <Spacer>\r\n        <Text style={styles.signInText}>Already have an account? Sign in here</Text>\r\n      </Spacer>\r\n    </TouchableOpacity>\r\n    <Spacer/>\r\n    \r\n      </View>\r\n      <Button buttonStyle={{backgroundColor:\"transparent\"}}style={styles.modal} titleStyle={{color:\"white\"}}title=\"About Us\" onPress={toggleModal}/>\r\n      <AboutUs toggleModal={toggleModal} isModalVisable={isModalVisable}/>\r\n    </SafeAreaView>\r\n    </ImageBackground>\r\n  );\r\n}\r\n\r\n\r\nSignupScreen.navigationOptions = () => {\r\n  return {\r\n    header: () => false,\r\n  };\r\n};\r\n\r\n\r\nconst styles=StyleSheet.create({\r\n  background:{\r\n    flex:1\r\n  },\r\n  image:{\r\n    width:400,\r\n    height:130,\r\n    marginLeft:20,\r\n    marginTop: 20\r\n  },\r\n  errorMessage:{\r\n    color: \"red\",\r\n    fontSize: 16,\r\n    marginLeft: 15\r\n  },\r\n  signInText:{\r\n    color: \"blue\"\r\n  },\r\n  modal:{\r\n    width:100,\r\n    height: 40,\r\n    marginLeft:160,\r\n    marginTop:30,\r\n    \r\n  }\r\n\r\n})\r\nexport default SignupScreen;"]},"metadata":{},"sourceType":"module"}