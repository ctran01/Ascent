{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nvar instance = axios.create({\n  baseURL: \"https://ascentbackend.herokuapp.com/\"\n});\ninstance.interceptors.request.use(function _callee(config) {\n  var token;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n        case 2:\n          token = _context.sent;\n\n          if (token) {\n            config.headers.Authorization = \"Bearer \" + token;\n          }\n\n          return _context.abrupt(\"return\", config);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}, function (err) {\n  return Promise.reject(err);\n});\nexport default instance;","map":{"version":3,"sources":["C:/Users/Chris/Desktop/App_Academy/Ascent-mobile/client/app/api/apiServer.js"],"names":["axios","instance","create","baseURL","interceptors","request","use","config","AsyncStorage","getItem","token","headers","Authorization","err","Promise","reject"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,QAAQ,GAAID,KAAK,CAACE,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAE;AADoB,CAAb,CAAlB;AAIAF,QAAQ,CAACG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAGE,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACsBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADtB;;AAAA;AACQC,UAAAA,KADR;;AAEE,cAAGA,KAAH,EAAS;AACPH,YAAAA,MAAM,CAACI,OAAP,CAAeC,aAAf,eAAyCF,KAAzC;AACD;;AAJH,2CAKSH,MALT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAHF,EAWE,UAACM,GAAD,EAAO;AACL,SAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD,CAbH;AAgBA,eAAeZ,QAAf","sourcesContent":["import axios from \"axios\";\nimport {AsyncStorage} from 'react-native';\n\nconst instance =  axios.create({\n  baseURL: \"https://ascentbackend.herokuapp.com/\"\n})\n\ninstance.interceptors.request.use(\n  //Calls everytime we make an axios req\n  //Config embeds jwt token to call every time\n  async (config)=>{\n    const token = await AsyncStorage.getItem('token') \n    if(token){\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config\n  },\n  //Error\n  (err)=>{\n    return Promise.reject(err);\n  }\n)\n\nexport default instance"]},"metadata":{},"sourceType":"module"}