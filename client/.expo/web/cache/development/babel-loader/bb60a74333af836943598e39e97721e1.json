{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport createDataContext from \"./createDataContext\";\nimport apiServer from \"../api/apiServer\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { navigate } from \"../setNavigator\";\n\nvar userReducer = function userReducer(state, action) {\n  switch (action.type) {\n    case 'add_error':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorMessage: action.payload\n      });\n\n    case 'clear_error_message':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorMessage: ''\n      });\n\n    case 'signin':\n      return {\n        token: action.payload.token,\n        errorMessage: '',\n        userid: action.payload.userid\n      };\n\n    case 'signout':\n      return {\n        token: null,\n        errorMessage: '',\n        userid: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar tryLocalSignin = function tryLocalSignin(dispatch) {\n  return function _callee() {\n    var token, id;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('userid'));\n\n          case 5:\n            id = _context.sent;\n\n            if (token) {\n              dispatch({\n                type: 'signin',\n                payload: {\n                  token: token,\n                  userid: id\n                }\n              });\n              navigate('mainFlow');\n            } else {\n              navigate('loginFlow');\n            }\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar clearErrorMessage = function clearErrorMessage(dispatch) {\n  return function () {\n    dispatch({\n      type: 'clear_error_message'\n    });\n  };\n};\n\nvar signup = function signup(dispatch) {\n  return function _callee2(_ref) {\n    var username, email, password, navigation, res, id;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            username = _ref.username, email = _ref.email, password = _ref.password, navigation = _ref.navigation;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(apiServer.post('/signup', {\n              username: username,\n              email: email,\n              password: password\n            }));\n\n          case 4:\n            res = _context2.sent;\n            id = res.data.user.id.toString();\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', res.data.token));\n\n          case 8:\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('userid', id));\n\n          case 10:\n            dispatch({\n              type: 'signin',\n              payload: {\n                token: res.data.token,\n                userid: id\n              }\n            });\n            navigate('mainFlow');\n            _context2.next = 18;\n            break;\n\n          case 14:\n            _context2.prev = 14;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.log(_context2.t0);\n            dispatch({\n              type: 'add_error',\n              payload: 'Something went wrong with sign up'\n            });\n\n          case 18:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 14]], Promise);\n  };\n};\n\nvar signin = function signin(dispatch) {\n  return function _callee3(_ref2) {\n    var email, password, res, id;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            email = _ref2.email, password = _ref2.password;\n            _context3.prev = 1;\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(apiServer.post('/signin', {\n              email: email,\n              password: password\n            }));\n\n          case 4:\n            res = _context3.sent;\n            id = res.data.user.id.toString();\n            _context3.next = 8;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', res.data.token));\n\n          case 8:\n            _context3.next = 10;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('userid', id));\n\n          case 10:\n            dispatch({\n              type: 'signin',\n              payload: {\n                token: res.data.token,\n                userid: id\n              }\n            });\n            navigate('mainFlow');\n            _context3.next = 18;\n            break;\n\n          case 14:\n            _context3.prev = 14;\n            _context3.t0 = _context3[\"catch\"](1);\n            console.log(_context3.t0);\n            dispatch({\n              type: 'add_error',\n              payload: \"Something went wrong with sign in\"\n            });\n\n          case 18:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[1, 14]], Promise);\n  };\n};\n\nvar signout = function signout(dispatch) {\n  return function _callee4() {\n    var token, id;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem('token'));\n\n          case 2:\n            token = _context4.sent;\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem('id'));\n\n          case 5:\n            id = _context4.sent;\n            dispatch({\n              type: 'signout'\n            });\n            navigate('loginFlow');\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar _createDataContext = createDataContext(userReducer, {\n  signin: signin,\n  signout: signout,\n  signup: signup,\n  clearErrorMessage: clearErrorMessage,\n  tryLocalSignin: tryLocalSignin\n}, {\n  token: null,\n  errorMessage: '',\n  userid: null\n}),\n    Provider = _createDataContext.Provider,\n    Context = _createDataContext.Context;\n\nexport { Provider, Context };","map":{"version":3,"sources":["C:/Users/Chris/Desktop/App_Academy/Ascent-mobile/client/app/context/UserContext.js"],"names":["createDataContext","apiServer","navigate","userReducer","state","action","type","errorMessage","payload","token","userid","tryLocalSignin","dispatch","AsyncStorage","getItem","id","clearErrorMessage","signup","username","email","password","navigation","post","res","data","user","toString","setItem","console","log","signin","signout","removeItem","Provider","Context"],"mappings":"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","sourcesContent":["import createDataContext from './createDataContext';\nimport apiServer from '../api/apiServer';\nimport {AsyncStorage} from 'react-native';\nimport {navigate} from '../setNavigator'\n\nconst userReducer = (state,action) =>{\n  switch(action.type){\n    case 'add_error':\n      return {...state, errorMessage: action.payload}\n    case 'clear_error_message':\n      return {...state, errorMessage: ''}\n    case 'signin':\n      return {token: action.payload.token, errorMessage:'', userid: action.payload.userid}\n    case 'signout':\n      return {token: null, errorMessage: '', userid: null}\n    default:\n      return state;\n  }\n}\n\n//Actions\nconst tryLocalSignin = (dispatch)=>{\n  return async()=>{\n    const token = await AsyncStorage.getItem('token');\n    const id = await AsyncStorage.getItem('userid')\n    if(token){\n      dispatch({type: 'signin', payload: {token:token, userid:id}})\n      navigate('mainFlow')\n    }else{\n      navigate('loginFlow')\n    }\n    \n  }\n}\nconst clearErrorMessage = (dispatch) =>{\n  return ()=>{\n    dispatch({type: 'clear_error_message'});\n\n  }\n\n}\n\nconst signup = (dispatch) =>{\n  return async ({username,email, password, navigation})=>{\n    try{\n      const res = await apiServer.post('/signup', {username,email,password});\n      const id = res.data.user.id.toString()\n      await AsyncStorage.setItem('token', res.data.token) //Sets token to \"local storage\"\n      await AsyncStorage.setItem('userid',id)\n      dispatch({type: 'signin', payload: {token: res.data.token, userid: id}}) //Set token to state\n      navigate('mainFlow')\n    }catch(err){\n      console.log(err)\n      dispatch({type: 'add_error', payload: 'Something went wrong with sign up'})\n    }\n  }\n}\n\nconst signin = (dispatch) =>{\n  return async ({email,password})=>{\n    try{\n      const res = await apiServer.post('/signin', {email,password});\n      const id = res.data.user.id.toString()\n      await AsyncStorage.setItem('token',res.data.token)\n      await AsyncStorage.setItem('userid',id)\n      \n      dispatch({type: 'signin', payload: {token: res.data.token, userid: id}})\n      navigate('mainFlow')\n    }catch(err){\n      console.log(err)\n      dispatch({type: 'add_error', payload: \"Something went wrong with sign in\"})\n    }\n  }\n}\n\nconst signout = (dispatch) =>{\n  return async ()=>{\n    const token = await AsyncStorage.removeItem('token')\n    const id = await AsyncStorage.removeItem('id')\n    dispatch({type: 'signout'})\n    navigate('loginFlow')\n  }\n}\n\n\nexport const {Provider,Context} = createDataContext( userReducer, {signin,signout,signup,clearErrorMessage,tryLocalSignin}, {token: null, errorMessage:'', userid: null})"]},"metadata":{},"sourceType":"module"}