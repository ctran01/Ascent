{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Chris\\\\Desktop\\\\App_Academy\\\\Ascent-mobile\\\\client\\\\app\\\\components\\\\RouteForm.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { TouchableOpactity } from \"react-native-web/dist/index\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Input, Button, Text } from 'react-native-elements';\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport apiServer from \"../api/apiServer\";\nimport { setStatusBarNetworkActivityIndicatorVisible } from 'expo-status-bar';\n\nvar RouteForm = function RouteForm(_ref) {\n  var initialValues = _ref.initialValues,\n      submitButtonText = _ref.submitButtonText,\n      onSubmit = _ref.onSubmit;\n\n  var _useState = useState(initialValues.name),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(initialValues.description),\n      _useState4 = _slicedToArray(_useState3, 2),\n      description = _useState4[0],\n      setDescription = _useState4[1];\n\n  var _useState5 = useState(initialValues.grade),\n      _useState6 = _slicedToArray(_useState5, 2),\n      grade = _useState6[0],\n      setGrade = _useState6[1];\n\n  var _useState7 = useState(initialValues.type),\n      _useState8 = _slicedToArray(_useState7, 2),\n      type = _useState8[0],\n      setType = _useState8[1];\n\n  var _useState9 = useState(initialValues.latitude),\n      _useState10 = _slicedToArray(_useState9, 2),\n      latitude = _useState10[0],\n      setLatitude = _useState10[1];\n\n  var _useState11 = useState(initialValues.longitude),\n      _useState12 = _slicedToArray(_useState11, 2),\n      longitude = _useState12[0],\n      setLongitude = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      areaIds = _useState14[0],\n      setAreaIds = _useState14[1];\n\n  var _useState15 = useState(initialValues.areaid),\n      _useState16 = _slicedToArray(_useState15, 2),\n      selectedArea = _useState16[0],\n      setSelectedArea = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      error = _useState18[0],\n      setError = _useState18[1];\n\n  var getAreaIds = function getAreaIds() {\n    var res;\n    return _regeneratorRuntime.async(function getAreaIds$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(apiServer.get(\"/area/\"));\n\n          case 3:\n            res = _context.sent;\n            setAreaIds(res.data.areas);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    getAreaIds();\n  }, []);\n  console.log(selectedArea);\n\n  var validate = function validate(num) {\n    if (typeof num !== 'number') {\n      setError('Needs to be a Number');\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    label: \"Name\",\n    placeholderTextColor: \"black\",\n    value: name,\n    onChangeText: setName,\n    autoCorrect: false,\n    inputContainerStyle: styles.inputContainter,\n    inputStyle: styles.input,\n    labelStyle: styles.label,\n    selectionColor: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    label: \"Grade\",\n    placeholderTextColor: \"black\",\n    value: grade,\n    onChangeText: setGrade,\n    autoCorrect: false,\n    inputContainerStyle: styles.inputContainter,\n    inputStyle: styles.input,\n    labelStyle: styles.label,\n    selectionColor: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      color: \"white\",\n      fontWeight: \"bold\",\n      marginLeft: 10,\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Type\"), React.createElement(DropDownPicker, {\n    items: [{\n      label: 'Sport',\n      value: 'Sport'\n    }, {\n      label: 'Boulder',\n      value: 'Boulder'\n    }, {\n      label: 'Trad',\n      value: 'Trad'\n    }],\n    defaultValue: initialValues.type,\n    containerStyle: {\n      height: 40,\n      width: 120,\n      marginLeft: 10,\n      marginBottom: 10\n    },\n    placeholder: \"Select type\",\n    onChangeItem: function onChangeItem(item) {\n      setType(item.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, React.createElement(Input, {\n    label: \"Latitude\",\n    placeholderTextColor: \"black\",\n    value: latitude,\n    onChangeText: setLatitude,\n    autoCorrect: false,\n    inputContainerStyle: {\n      borderWidth: 1,\n      borderColor: \"white\",\n      width: 100\n    },\n    inputStyle: styles.input,\n    labelStyle: styles.label,\n    selectionColor: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: {\n      marginLeft: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, React.createElement(Input, {\n    label: \"Longitude\",\n    placeholderTextColor: \"black\",\n    value: longitude,\n    onChangeText: setLongitude,\n    autoCorrect: false,\n    inputContainerStyle: {\n      borderWidth: 1,\n      borderColor: \"white\",\n      width: 100\n    },\n    inputStyle: {\n      color: \"white\"\n    },\n    labelStyle: styles.label,\n    selectionColor: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }))), React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      color: \"white\",\n      fontWeight: \"bold\",\n      marginLeft: 10,\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Area\"), React.createElement(DropDownPicker, {\n    items: areaIds.map(function (area) {\n      return {\n        label: area.name,\n        value: area.id\n      };\n    }),\n    containerStyle: {\n      height: 40,\n      width: 140,\n      marginLeft: 10,\n      marginBottom: 10\n    },\n    placeholder: \"Select type\",\n    onChangeItem: function onChangeItem(item) {\n      setSelectedArea(item.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    label: \"Description\",\n    placeholder: \"Enter Description Here\",\n    placeholderTextColor: \"white\",\n    value: description,\n    onChangeText: setDescription,\n    autoCorrect: false,\n    inputContainerStyle: {\n      borderBottomWidth: 0,\n      borderColor: \"black\"\n    },\n    inputStyle: styles.input,\n    labelStyle: styles.label,\n    multiline: true,\n    onSubmitEditing: function onSubmitEditing() {\n      return Keyboard.dismiss();\n    },\n    selectionColor: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    style: {\n      marginTop: 40,\n      width: 200,\n      left: 100\n    },\n    buttonStyle: {\n      backgroundColor: \"#1359c4\"\n    },\n    title: submitButtonText,\n    onPress: function onPress() {\n      onSubmit(name, grade, type, selectedArea, latitude, longitude, description);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  inputContainter: {\n    borderWidth: 1,\n    borderColor: \"white\"\n  },\n  input: {\n    color: \"white\"\n  },\n  label: {\n    color: \"white\"\n  }\n});\nRouteForm.defaultProps = {\n  initialValues: {\n    name: '',\n    description: '',\n    grade: '',\n    type: '',\n    latitude: '',\n    longitude: ''\n  }\n};\nexport default RouteForm;","map":{"version":3,"sources":["C:/Users/Chris/Desktop/App_Academy/Ascent-mobile/client/app/components/RouteForm.js"],"names":["React","useState","useEffect","useContext","TouchableOpactity","Input","Button","Text","DropDownPicker","apiServer","setStatusBarNetworkActivityIndicatorVisible","RouteForm","initialValues","submitButtonText","onSubmit","name","setName","description","setDescription","grade","setGrade","type","setType","latitude","setLatitude","longitude","setLongitude","areaIds","setAreaIds","areaid","selectedArea","setSelectedArea","error","setError","getAreaIds","get","res","data","areas","console","log","validate","num","styles","inputContainter","input","label","fontSize","color","fontWeight","marginLeft","marginBottom","value","height","width","item","flexDirection","borderWidth","borderColor","map","area","id","borderBottomWidth","Keyboard","dismiss","marginTop","left","backgroundColor","StyleSheet","create","defaultProps"],"mappings":"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","sourcesContent":["import React,{useState, useEffect, useContext} from 'react';\r\nimport {View, SafeAreaView, StyleSheet, ImageBackground, TouchableOpactity,Keyboard} from 'react-native'\r\nimport {Input, Button, Text} from 'react-native-elements'\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport apiServer from '../api/apiServer'\r\nimport { setStatusBarNetworkActivityIndicatorVisible } from 'expo-status-bar';\r\n\r\n\r\nconst RouteForm = ({initialValues,submitButtonText,onSubmit}) =>{\r\n  \r\n  const [name, setName] = useState(initialValues.name)\r\n  const [description, setDescription] = useState(initialValues.description)\r\n  const [grade,setGrade] =useState(initialValues.grade)\r\n  const [type,setType] =useState(initialValues.type)\r\n  const [latitude,setLatitude] =useState(initialValues.latitude)\r\n  const [longitude,setLongitude] =useState(initialValues.longitude)\r\n  const [areaIds,setAreaIds] =useState([])\r\n  const [selectedArea, setSelectedArea] = useState(initialValues.areaid)\r\n  const [error,setError] = useState('')\r\n  \r\n  const getAreaIds = async()=>{\r\n    try{\r\n      let res = await apiServer.get(`/area/`)\r\n      setAreaIds(res.data.areas)\r\n    }catch(err){\r\n    console.log(err)\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getAreaIds()\r\n  },[])\r\n\r\nconsole.log(selectedArea)\r\n\r\n  const validate =(num)=>{\r\n    if(typeof(num) !== 'number'){\r\n      setError('Needs to be a Number')\r\n    }\r\n  }\r\n\r\n  return(\r\n      <SafeAreaView>\r\n        {/* <Text h3>Add a route</Text> */}\r\n        <Input \r\n        label=\"Name\"        \r\n        placeholderTextColor=\"black\"\r\n        value={name}\r\n        onChangeText={setName}\r\n        autoCorrect={false}\r\n        inputContainerStyle={styles.inputContainter}\r\n        inputStyle={styles.input}\r\n        labelStyle={styles.label}\r\n        selectionColor={\"white\"}\r\n        />\r\n        <Input \r\n        label=\"Grade\"\r\n        placeholderTextColor=\"black\"\r\n        value={grade}\r\n        onChangeText={setGrade}\r\n        autoCorrect={false}\r\n        inputContainerStyle={styles.inputContainter}\r\n        inputStyle={styles.input}\r\n        labelStyle={styles.label}\r\n        selectionColor={\"white\"}\r\n        />\r\n        \r\n          \r\n            <Text style={{fontSize:16, color: \"white\", fontWeight:\"bold\", marginLeft:10,marginBottom:10}}>Type</Text>\r\n            <DropDownPicker items={[\r\n              {label: 'Sport', value: 'Sport'},\r\n              {label: 'Boulder', value: 'Boulder'},\r\n              {label: 'Trad', value: 'Trad'}\r\n            ]}\r\n            defaultValue={initialValues.type}\r\n            containerStyle={{height:40, width: 120, marginLeft:10,marginBottom:10}}\r\n            placeholder=\"Select type\"\r\n            onChangeItem={(item)=>{setType(item.value)}}\r\n            />\r\n          \r\n          \r\n            \r\n          \r\n        \r\n        <View style={{flexDirection:\"row\"}}>\r\n          <View>\r\n            <Input \r\n            label=\"Latitude\"        \r\n            placeholderTextColor=\"black\"\r\n            value={latitude}\r\n            onChangeText={setLatitude}\r\n            autoCorrect={false}\r\n            inputContainerStyle={{borderWidth: 1,borderColor:\"white\", width:100}}\r\n            inputStyle={styles.input}\r\n            labelStyle={styles.label}\r\n            selectionColor={\"white\"}\r\n            />\r\n          </View>\r\n          <View style={{marginLeft:20}}>\r\n            <Input \r\n            label=\"Longitude\"        \r\n            placeholderTextColor=\"black\"\r\n            value={longitude}\r\n            onChangeText={setLongitude}\r\n            autoCorrect={false}\r\n            inputContainerStyle={{borderWidth: 1,borderColor:\"white\", width:100}}\r\n            inputStyle={{color:\"white\"}}\r\n            labelStyle={styles.label} \r\n            selectionColor={\"white\"}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <Text style={{fontSize:16, color: \"white\", fontWeight:\"bold\", marginLeft:10, marginBottom:10}}>Area</Text>\r\n            <DropDownPicker items={ areaIds.map(area=> ({label:area.name, value:area.id}))}\r\n            // defaultValue={selectedArea}\r\n            containerStyle={{height:40, width: 140, marginLeft:10,marginBottom:10}}\r\n            placeholder=\"Select type\"\r\n            onChangeItem={(item)=>{setSelectedArea(item.value)}}\r\n          />\r\n        \r\n        <Input \r\n        label=\"Description\"\r\n        placeholder={\"Enter Description Here\"}\r\n        placeholderTextColor=\"white\"\r\n        value={description}\r\n        onChangeText={setDescription}\r\n        autoCorrect={false}\r\n        inputContainerStyle={{ borderBottomWidth:0, borderColor: \"black\" }}\r\n        inputStyle={styles.input}\r\n        labelStyle={styles.label} \r\n        multiline={true}\r\n        onSubmitEditing={()=>Keyboard.dismiss()}\r\n        selectionColor={\"white\"}\r\n        />\r\n\r\n        {/* Add Area later */}\r\n        <Button style={{marginTop:40, width: 200, left:100,}} buttonStyle={{ backgroundColor:\"#1359c4\"}} title={submitButtonText} onPress={()=> {onSubmit(name,grade,type,selectedArea,latitude,longitude,description)}}/>\r\n\r\n      </SafeAreaView>\r\n    )\r\n\r\n\r\n}\r\n\r\nconst styles=StyleSheet.create({\r\n  inputContainter:{\r\n     borderWidth: 1 ,\r\n      borderColor:\"white\"\r\n  },\r\n  input:{\r\n    color:\"white\"\r\n  },\r\n  label:{\r\n    color:\"white\",\r\n    \r\n  }\r\n})\r\n\r\nRouteForm.defaultProps={\r\n  initialValues:{\r\n    name: '',\r\n    description: '',\r\n    grade: '',\r\n    type: '',\r\n    latitude: '',\r\n    longitude: ''\r\n  }\r\n}\r\n\r\nexport default RouteForm"]},"metadata":{},"sourceType":"module"}